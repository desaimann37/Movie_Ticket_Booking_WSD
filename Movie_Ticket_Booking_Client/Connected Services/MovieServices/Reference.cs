//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Movie_Ticket_Booking_Client.MovieServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Movie", Namespace="http://schemas.datacontract.org/2004/07/Movie_Ticket_Booking_Services.Models")]
    [System.SerializableAttribute()]
    public partial class Movie : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Movie_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Release_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Movie_Ticket_Booking_Client.MovieServices.TheaterMovie[] TheatersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreField, value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Movie_Id {
            get {
                return this.Movie_IdField;
            }
            set {
                if ((this.Movie_IdField.Equals(value) != true)) {
                    this.Movie_IdField = value;
                    this.RaisePropertyChanged("Movie_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Release_Date {
            get {
                return this.Release_DateField;
            }
            set {
                if ((this.Release_DateField.Equals(value) != true)) {
                    this.Release_DateField = value;
                    this.RaisePropertyChanged("Release_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Movie_Ticket_Booking_Client.MovieServices.TheaterMovie[] Theaters {
            get {
                return this.TheatersField;
            }
            set {
                if ((object.ReferenceEquals(this.TheatersField, value) != true)) {
                    this.TheatersField = value;
                    this.RaisePropertyChanged("Theaters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TheaterMovie", Namespace="http://schemas.datacontract.org/2004/07/Movie_Ticket_Booking_Services.Models")]
    [System.SerializableAttribute()]
    public partial class TheaterMovie : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Movie_Ticket_Booking_Client.MovieServices.Movie MovieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Movie_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Movie_Ticket_Booking_Client.MovieServices.Theater TheaterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Theater_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Total_SeatsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Movie_Ticket_Booking_Client.MovieServices.Movie Movie {
            get {
                return this.MovieField;
            }
            set {
                if ((object.ReferenceEquals(this.MovieField, value) != true)) {
                    this.MovieField = value;
                    this.RaisePropertyChanged("Movie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Movie_Id {
            get {
                return this.Movie_IdField;
            }
            set {
                if ((this.Movie_IdField.Equals(value) != true)) {
                    this.Movie_IdField = value;
                    this.RaisePropertyChanged("Movie_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Movie_Ticket_Booking_Client.MovieServices.Theater Theater {
            get {
                return this.TheaterField;
            }
            set {
                if ((object.ReferenceEquals(this.TheaterField, value) != true)) {
                    this.TheaterField = value;
                    this.RaisePropertyChanged("Theater");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Theater_Id {
            get {
                return this.Theater_IdField;
            }
            set {
                if ((this.Theater_IdField.Equals(value) != true)) {
                    this.Theater_IdField = value;
                    this.RaisePropertyChanged("Theater_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total_Seats {
            get {
                return this.Total_SeatsField;
            }
            set {
                if ((this.Total_SeatsField.Equals(value) != true)) {
                    this.Total_SeatsField = value;
                    this.RaisePropertyChanged("Total_Seats");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Theater", Namespace="http://schemas.datacontract.org/2004/07/Movie_Ticket_Booking_Services.Models")]
    [System.SerializableAttribute()]
    public partial class Theater : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Movie_Ticket_Booking_Client.MovieServices.TheaterMovie[] MoviesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Theater_IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Movie_Ticket_Booking_Client.MovieServices.TheaterMovie[] Movies {
            get {
                return this.MoviesField;
            }
            set {
                if ((object.ReferenceEquals(this.MoviesField, value) != true)) {
                    this.MoviesField = value;
                    this.RaisePropertyChanged("Movies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Theater_Id {
            get {
                return this.Theater_IdField;
            }
            set {
                if ((this.Theater_IdField.Equals(value) != true)) {
                    this.Theater_IdField = value;
                    this.RaisePropertyChanged("Theater_Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MovieServices.IMovieServices")]
    public interface IMovieServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieServices/GetMovies", ReplyAction="http://tempuri.org/IMovieServices/GetMoviesResponse")]
        Movie_Ticket_Booking_Client.MovieServices.Movie[] GetMovies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieServices/GetMovies", ReplyAction="http://tempuri.org/IMovieServices/GetMoviesResponse")]
        System.Threading.Tasks.Task<Movie_Ticket_Booking_Client.MovieServices.Movie[]> GetMoviesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieServices/GetMovie", ReplyAction="http://tempuri.org/IMovieServices/GetMovieResponse")]
        Movie_Ticket_Booking_Client.MovieServices.Movie GetMovie(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieServices/GetMovie", ReplyAction="http://tempuri.org/IMovieServices/GetMovieResponse")]
        System.Threading.Tasks.Task<Movie_Ticket_Booking_Client.MovieServices.Movie> GetMovieAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieServices/AddMovie", ReplyAction="http://tempuri.org/IMovieServices/AddMovieResponse")]
        string AddMovie(Movie_Ticket_Booking_Client.MovieServices.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieServices/AddMovie", ReplyAction="http://tempuri.org/IMovieServices/AddMovieResponse")]
        System.Threading.Tasks.Task<string> AddMovieAsync(Movie_Ticket_Booking_Client.MovieServices.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieServices/UpdateMovie", ReplyAction="http://tempuri.org/IMovieServices/UpdateMovieResponse")]
        string UpdateMovie(Movie_Ticket_Booking_Client.MovieServices.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieServices/UpdateMovie", ReplyAction="http://tempuri.org/IMovieServices/UpdateMovieResponse")]
        System.Threading.Tasks.Task<string> UpdateMovieAsync(Movie_Ticket_Booking_Client.MovieServices.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieServices/DeleteMovie", ReplyAction="http://tempuri.org/IMovieServices/DeleteMovieResponse")]
        string DeleteMovie(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieServices/DeleteMovie", ReplyAction="http://tempuri.org/IMovieServices/DeleteMovieResponse")]
        System.Threading.Tasks.Task<string> DeleteMovieAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieServices/AddMovieToTheater", ReplyAction="http://tempuri.org/IMovieServices/AddMovieToTheaterResponse")]
        string AddMovieToTheater(int theaterId, Movie_Ticket_Booking_Client.MovieServices.Movie movie, int totalSeats);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieServices/AddMovieToTheater", ReplyAction="http://tempuri.org/IMovieServices/AddMovieToTheaterResponse")]
        System.Threading.Tasks.Task<string> AddMovieToTheaterAsync(int theaterId, Movie_Ticket_Booking_Client.MovieServices.Movie movie, int totalSeats);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieServices/GetTheatersByMovieId", ReplyAction="http://tempuri.org/IMovieServices/GetTheatersByMovieIdResponse")]
        Movie_Ticket_Booking_Client.MovieServices.Theater[] GetTheatersByMovieId(int movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieServices/GetTheatersByMovieId", ReplyAction="http://tempuri.org/IMovieServices/GetTheatersByMovieIdResponse")]
        System.Threading.Tasks.Task<Movie_Ticket_Booking_Client.MovieServices.Theater[]> GetTheatersByMovieIdAsync(int movieId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMovieServicesChannel : Movie_Ticket_Booking_Client.MovieServices.IMovieServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MovieServicesClient : System.ServiceModel.ClientBase<Movie_Ticket_Booking_Client.MovieServices.IMovieServices>, Movie_Ticket_Booking_Client.MovieServices.IMovieServices {
        
        public MovieServicesClient() {
        }
        
        public MovieServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MovieServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MovieServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MovieServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Movie_Ticket_Booking_Client.MovieServices.Movie[] GetMovies() {
            return base.Channel.GetMovies();
        }
        
        public System.Threading.Tasks.Task<Movie_Ticket_Booking_Client.MovieServices.Movie[]> GetMoviesAsync() {
            return base.Channel.GetMoviesAsync();
        }
        
        public Movie_Ticket_Booking_Client.MovieServices.Movie GetMovie(int id) {
            return base.Channel.GetMovie(id);
        }
        
        public System.Threading.Tasks.Task<Movie_Ticket_Booking_Client.MovieServices.Movie> GetMovieAsync(int id) {
            return base.Channel.GetMovieAsync(id);
        }
        
        public string AddMovie(Movie_Ticket_Booking_Client.MovieServices.Movie movie) {
            return base.Channel.AddMovie(movie);
        }
        
        public System.Threading.Tasks.Task<string> AddMovieAsync(Movie_Ticket_Booking_Client.MovieServices.Movie movie) {
            return base.Channel.AddMovieAsync(movie);
        }
        
        public string UpdateMovie(Movie_Ticket_Booking_Client.MovieServices.Movie movie) {
            return base.Channel.UpdateMovie(movie);
        }
        
        public System.Threading.Tasks.Task<string> UpdateMovieAsync(Movie_Ticket_Booking_Client.MovieServices.Movie movie) {
            return base.Channel.UpdateMovieAsync(movie);
        }
        
        public string DeleteMovie(int id) {
            return base.Channel.DeleteMovie(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteMovieAsync(int id) {
            return base.Channel.DeleteMovieAsync(id);
        }
        
        public string AddMovieToTheater(int theaterId, Movie_Ticket_Booking_Client.MovieServices.Movie movie, int totalSeats) {
            return base.Channel.AddMovieToTheater(theaterId, movie, totalSeats);
        }
        
        public System.Threading.Tasks.Task<string> AddMovieToTheaterAsync(int theaterId, Movie_Ticket_Booking_Client.MovieServices.Movie movie, int totalSeats) {
            return base.Channel.AddMovieToTheaterAsync(theaterId, movie, totalSeats);
        }
        
        public Movie_Ticket_Booking_Client.MovieServices.Theater[] GetTheatersByMovieId(int movieId) {
            return base.Channel.GetTheatersByMovieId(movieId);
        }
        
        public System.Threading.Tasks.Task<Movie_Ticket_Booking_Client.MovieServices.Theater[]> GetTheatersByMovieIdAsync(int movieId) {
            return base.Channel.GetTheatersByMovieIdAsync(movieId);
        }
    }
}
